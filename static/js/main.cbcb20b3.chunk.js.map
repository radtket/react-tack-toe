{"version":3,"sources":["components/Square.js","helpers/helpers.js","components/Board.js","Game.js","index.js"],"names":["Square","_ref","onClick","value","_jsx","className","type","children","defaultProps","calculateWinner","squares","lines","i","length","a","b","c","Board","state","setState","useState","Array","fill","xIsNext","handleClick","prev","copy","winner","status","_jsxs","Game","ReactDOM","render","document","getElementById"],"mappings":"qKAGA,MAAMA,EAASC,IAAyB,IAAxB,QAAEC,EAAO,MAAEC,GAAOF,EAChC,OACEG,cAAA,UAAQC,UAAU,SAASH,QAASA,EAASI,KAAK,SAAQC,SACvDJ,GACM,EASbH,EAAOQ,aAAe,CACpBL,MAAO,MAGMH,QCAAS,MApBSC,IACtB,MAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,GAAK,EAAG,CACxC,MAAOE,EAAGC,EAAGC,GAAKL,EAAMC,GACxB,GAAIF,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,EAEnB,CACA,OAAO,IAAI,ECgCEG,MA7CDA,KACZ,MAAOC,EAAOC,GAAYC,mBAAS,CACjCV,QAASW,MAAM,GAAGC,KAAK,MACvBC,SAAS,IAGLC,EAAcZ,IAClBO,GAASM,IACP,MAAMC,EAAO,IAAKD,GAClBC,EAAKhB,QAAQE,GAAKc,EAAKH,QAAU,IAAM,IACvCG,EAAKH,SAAWG,EAAKH,QACrB,MAAMI,EAASlB,EAAgBiB,EAAKhB,SAC9BkB,EAASD,EACX,WAAWA,IACX,iBAAgBT,EAAMK,QAAU,IAAM,KAC1C,MAAO,IACFG,EACHC,SACAC,SACD,GACD,EAGJ,OACEC,eAAA,OAAAtB,SAAA,CACEH,cAAA,OAAKC,UAAU,SAAQE,SAAEW,EAAMU,SAC/BC,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,QAE9DmB,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,QAE9DmB,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,KAC5DN,cAACJ,EAAM,CAACE,QAASA,IAAMsB,EAAY,GAAIrB,MAAOe,EAAMR,QAAQ,UAE1D,EC9BKoB,MAZFA,IACXD,eAAA,OAAKxB,UAAU,OAAME,SAAA,CACnBH,cAAA,OAAKC,UAAU,aAAYE,SACzBH,cAACa,EAAK,MAERY,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAAA,UACAA,cAAA,eCLN2B,IAASC,OAAO5B,cAAC0B,EAAI,IAAKG,SAASC,eAAe,Q","file":"static/js/main.cbcb20b3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Square = ({ onClick, value }) => {\n  return (\n    <button className=\"square\" onClick={onClick} type=\"button\">\n      {value}\n    </button>\n  );\n};\n\nSquare.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.oneOf([\"X\", \"O\"]),\n};\n\nSquare.defaultProps = {\n  value: null,\n};\n\nexport default Square;\n","const calculateWinner = squares => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\nexport default calculateWinner;\n","import React, { useState } from \"react\";\nimport Square from \"./Square\";\nimport calculateWinner from \"../helpers/helpers\";\n\nconst Board = () => {\n  const [state, setState] = useState({\n    squares: Array(9).fill(null),\n    xIsNext: true,\n  });\n\n  const handleClick = i => {\n    setState(prev => {\n      const copy = { ...prev };\n      copy.squares[i] = copy.xIsNext ? \"X\" : \"O\";\n      copy.xIsNext = !copy.xIsNext;\n      const winner = calculateWinner(copy.squares);\n      const status = winner\n        ? `Winner: ${winner}`\n        : `Next player: ${state.xIsNext ? \"X\" : \"O\"}`;\n      return {\n        ...copy,\n        winner,\n        status,\n      };\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"status\">{state.status}</div>\n      <div className=\"board-row\">\n        <Square onClick={() => handleClick(0)} value={state.squares[0]} />\n        <Square onClick={() => handleClick(1)} value={state.squares[1]} />\n        <Square onClick={() => handleClick(2)} value={state.squares[2]} />\n      </div>\n      <div className=\"board-row\">\n        <Square onClick={() => handleClick(3)} value={state.squares[3]} />\n        <Square onClick={() => handleClick(4)} value={state.squares[4]} />\n        <Square onClick={() => handleClick(5)} value={state.squares[5]} />\n      </div>\n      <div className=\"board-row\">\n        <Square onClick={() => handleClick(6)} value={state.squares[6]} />\n        <Square onClick={() => handleClick(7)} value={state.squares[7]} />\n        <Square onClick={() => handleClick(8)} value={state.squares[8]} />\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./components/Board\";\n\nconst Game = () => (\n  <div className=\"game\">\n    <div className=\"game-board\">\n      <Board />\n    </div>\n    <div className=\"game-info\">\n      <div>{/* status */}</div>\n      <ol>{/* TODO */}</ol>\n    </div>\n  </div>\n);\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}